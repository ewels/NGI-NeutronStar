/*
vim: syntax=groovy
-*- mode: groovy;-*-
 *  ----------------------------------------------------------------------------------
 *  Base configuration. Intended for running the pipeline but faking the costly Supernova assembly.
 *  Intended infrastucture: Local desktop, test-run in any environment
 */

docker {
   enabled = true
 }

params {
  full_output = true
  name = "testrun"
  test = true
  BUSCOfolder = "."
  BUSCOdata = "busco_example"
}

// The fake supernova doesn't work with trace enabled. I don't know why.
timeline {
  enabled = false
}
report {
  enabled = false
}
trace {
  enabled = false
}
dag {
  enabled = false
}

process {
    executor = 'local'
    cpus = { 4 }
    memory = { 8.GB }
    time = { 1.h * task.attempt }
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'finish' }
    maxRetries = 0
    maxErrors = '-1'
    validExitStatus = [0,127]

    withName: supernova_full {
      beforeScript = "export PATH=$baseDir/tests/:$PATH"
    }
    withName: busco {
      container = { "remiolsen/ngi-neutronstar" }
      beforeScript = "tar xfvz $baseDir/tests/busco_example.tar.gz"
    }
    withName: quast {
      container = { "remiolsen/ngi-neutronstar" }
    }
    withName: multiqc {
      container = { "remiolsen/ngi-neutronstar" }
    }
    withName: software_versions {
      container = { "remiolsen/ngi-neutronstar" }
    }
    withName: supernova_version {
      container = { "remiolsen/supernova" }
    }
    withName: mkoutput {
      container = { "remiolsen/supernova" }
    }

}
